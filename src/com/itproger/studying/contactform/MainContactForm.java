package com.itproger.studying.contactform;

public class MainContactForm {
    public static void main(String[] args) {
        ContactForm form = new ContactForm();
        form.setVisible(true);
    }
}
// Создание нового окна необходимо делать в отдельных файлах, а в основном классе лишь запускать нужное окно.
// Для работы с библиотекой необходимо импортировать классы, что позволят не только создавать графический дизайн,
// но также отслеживать различные нажатия на кнопки и выполнять действия после нажатия.
// Чтобы работать со многими методами, наш основной класс должен наследовать всё от класса с названием JFrame.
// После выполнения наследования мы можем иметь доступ к классам для создания полей, кнопок и прочих элементов.
// Существует множество специализированных классов, рассмотрим наиболее популярные из них:
//      JLabel - класс для создания объекта с надписью;
//      JTextField - класс для создания текстового поля;
//      JButton - класс для создания кнопки;
//      JCheckBox - класс для создания кнопки-галочки;
//      JRadioButton - класс для создания кнопок выбора.
// В Swing используются контейнеры «Container» для группировки нескольких элементов в одну форму.
// Перед созданием контейнера необходимо установить: название окна, его размеры и координаты (x, y, w, h),
// а также установили операцию при закрытии окна.
// Далее создается объект на основе класса Container, и прописывается метод getContentPane ().
// Данный метод возвращает контейнер верхнего уровня, в который помещаются все остальные объекты на окне
// Для размещения объектов стоит выбрать какой-либо слой. В уроке был использован слой GridLayout, что позволяет
// располагать объекты в формате сетки или же таблицы.
// После создания контейнера и основного слоя, можно добавлять элементы. Все элементы создаются на основе
// классов, что были рассмотрены в самом начале: JLabel, JButton и так далее. Чтобы добавить элемент в контейнер
// используется метод add, а в качестве параметра выступает элемент, что добавляется.
// Для создания выбора между radio кнопками необходимо объединить их в общую группу, таким образом переключаясь
// между ними они будут работать корректно.
// Для отслеживания событий используется интерфейс «ActionListener». Создаем класс с реализацией интерфейса
// и выполняем обработку действий пользователя
// В программе, что мы создавали мы, прописали получение данных из полей формы и вывод данных в новом окне.
// Чтобы взять данные из поля необходимо использовать метод «getText» для нужного вам поля: input.getText().
// Для создания всплывающего окна мы использовали класс «JOptionPane», в который поместили: объект, сообщение,
// название и тип диалогового окна.
// Остается все это вызвать с основного класса. В основном классе мы создаем объект на основе класса, что мы
// создавали и вызываем метод для отображения окна с параметром true: app.setVisible(true).
